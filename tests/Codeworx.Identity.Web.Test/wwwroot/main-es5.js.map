{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-root.component.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/auth-guard.ts","webpack:///src/app/auth-interceptor.ts","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/order/order-detail.component.ts","webpack:///src/app/order/order-detail.component.html","webpack:///src/app/order/order-list.component.html","webpack:///src/app/order/order-list.component.ts","webpack:///src/app/tenant-selector.component.ts","webpack:///src/app/tenant-selector.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppRootComponent","selector","template","routes","path","component","canActivate","children","AppRoutingModule","forRoot","imports","AppComponent","oauthService","router","title","loadDiscoveryDocument","logOut","urlPromise","createLoginUrl","url","identityUrl","issuer","toLowerCase","logoutUrl","encodeURIComponent","postLogoutRedirectUri","window","location","href","logout","styles","config","clientId","oidc","responseType","requireHttps","scope","AppModule","origin","redirectUri","configure","provide","useClass","multi","declarations","providers","bootstrap","AuthGuard","route","state","hasValidAccessToken","tryLogin","loggedin","initLoginFlow","AuthInterceptor","next","handle","clone","headers","set","getAccessToken","DashboardComponent","http","get","toPromise","response","name","refreshToken","alert","JSON","stringify","templateUrl","OrderDetailComponent","order","post","savedOrder","put","orderDate","orderDescription","orderNumber","save","OrderListComponent","orders","Date","push","selectedOrder","item","ngOnInit","addNew","TenantSelectorComponent","tenants","claims","getIdentityClaims","tenant","tenantInfo","key","current_tenant","_selectedTenant","value","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from \"@angular/core\";\r\n\r\n@Component({selector: 'app-root', template:'<router-outlet></router-outlet>' })\r\nexport class AppRootComponent{\r\n    \r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { AuthGuard } from './auth-guard';\r\nimport { AppComponent } from './app.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AppComponent,\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: DashboardComponent\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app',\r\n  template: `\r\n    <div style=\"margin-right:10px; margin-top:10px\">\r\n      <tenant-selector></tenant-selector>\r\n    </div>\r\n    \r\n    <div style=\"text-align:center\" class=\"content\">\r\n      <h1>\r\n        Welcome to {{title}}!\r\n      </h1>\r\n      <button (click)=\"logout()\">logout</button>\r\n    </div>\r\n    <router-outlet></router-outlet>\r\n  `,\r\n  styles: []\r\n})\r\nexport class AppComponent {\r\n  title = 'identity-test';\r\n\r\n  /**\r\n   *\r\n   */\r\n  constructor(private oauthService: OAuthService, private router: Router) {\r\n  }\r\n\r\n    public async logout(): Promise<void>\r\n    {\r\n        await this.oauthService.loadDiscoveryDocument();\r\n        this.oauthService.logOut(true);\r\n\r\n        let urlPromise: Promise<string> = (<any>this.oauthService).createLoginUrl({}, '', null, false, { \"prompt\": \"select_account\"});\r\n        let url = await urlPromise;\r\n\r\n        let identityUrl: string = this.oauthService.issuer;\r\n        identityUrl = identityUrl.toLowerCase();\r\n\r\n        this.oauthService.logoutUrl = identityUrl + '/account/logout?returnUrl=' + encodeURIComponent(url);\r\n        this.oauthService.postLogoutRedirectUri = this.oauthService.logoutUrl;\r\n\r\n        window.location.href = this.oauthService.logoutUrl;\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { OAuthService, AuthConfig, OAuthModule } from 'angular-oauth2-oidc';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AuthGuard } from './auth-guard';\r\nimport { UrlHandlingStrategy } from '@angular/router';\r\nimport { AuthInterceptor } from './auth-interceptor';\r\nimport { TenantSelectorComponent } from './tenant-selector.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { AppRootComponent } from './app-root.component';\r\nimport { OrderListComponent } from './order/order-list.component';\r\nimport { OrderDetailComponent } from './order/order-detail.component';\r\n\r\nconst config: AuthConfig = {\r\n  clientId: 'b45aba81aac1403f93dd1ce42f745ed2',\r\n  issuer: './',\r\n  postLogoutRedirectUri: 'abc',\r\n  oidc: true,\r\n  responseType: 'code',\r\n  requireHttps: true,\r\n  scope: 'openid profile tenant offline_access group_names external_token:access_token'\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    TenantSelectorComponent,\r\n    DashboardComponent,\r\n    AppRootComponent,\r\n    OrderListComponent,\r\n    OrderDetailComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    OAuthModule.forRoot(),\r\n    HttpClientModule,\r\n    FormsModule,\r\n  ],\r\n  providers: [\r\n    AuthGuard,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: AuthInterceptor,\r\n      multi: true\r\n    }\r\n  ],\r\n  bootstrap: [AppRootComponent]\r\n})\r\nexport class AppModule {\r\n  constructor(\r\n    oauthService: OAuthService,\r\n  ) {\r\n    config.issuer = window.location.origin;\r\n    config.redirectUri = window.location.origin;\r\n    config.logoutUrl = window.location.origin + '/account/logout?returnUrl=' + encodeURIComponent(window.location.origin);\r\n    oauthService.configure(config);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { OAuthService } from 'angular-oauth2-oidc'\r\n\r\n@Injectable()\r\nexport class AuthGuard\r\n    implements CanActivate {\r\n    constructor(private oauthService: OAuthService) {\r\n\r\n    }\r\n\r\n    public async canActivate(\r\n        route: ActivatedRouteSnapshot,\r\n        state: RouterStateSnapshot): Promise<boolean> {\r\n        await this.oauthService.loadDiscoveryDocument();\r\n\r\n        if (this.oauthService.hasValidAccessToken()) {\r\n            return true;\r\n        }\r\n\r\n        var loggedin = await this.oauthService.tryLogin()\r\n\r\n        if (loggedin && this.oauthService.hasValidAccessToken()) {\r\n            return true;\r\n        }\r\n\r\n        this.oauthService.initLoginFlow();\r\n        return false;\r\n    }\r\n\r\n}","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor\r\n    implements HttpInterceptor {\r\n\r\n    constructor(private oauthService: OAuthService) {\r\n\r\n    }\r\n\r\n    public intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        if (this.oauthService.hasValidAccessToken()) {\r\n            return next.handle(req.clone({ headers: req.headers.set('Authorization', 'Bearer ' + this.oauthService.getAccessToken()) }));\r\n        }\r\n\r\n        return next.handle(req);\r\n    }\r\n\r\n\r\n}","import { Component, OnInit } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { OAuthService } from \"angular-oauth2-oidc\";\r\n\r\n@Component({\r\n    selector: 'dashboard',\r\n    templateUrl: './dashboard.component.html'\r\n})\r\nexport class DashboardComponent\r\n    implements OnInit {\r\n    constructor(private http: HttpClient, private oauthService: OAuthService) {\r\n\r\n    }\r\n\r\n    public name: string;\r\n\r\n    async ngOnInit(): Promise<void> {\r\n        var response = await this.http.get(\"/api/me\", { responseType: 'text' }).toPromise();\r\n        this.name = response;\r\n    }\r\n\r\n    public async refreshToken(): Promise<void> {\r\n        let response = await this.oauthService.refreshToken();\r\n        alert(JSON.stringify(response));\r\n    }\r\n\r\n}","<button (click)=\"refreshToken()\">refresh token</button>\r\n\r\n<h3>Dashboard - Component</h3>\r\n<p>{{name}}</p>\r\n<order-list></order-list>","import { Component, Input } from \"@angular/core\";\r\nimport { Order } from './order';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n    selector: 'order-detail',\r\n    templateUrl: './order-detail.component.html'\r\n})\r\nexport class OrderDetailComponent\r\n{\r\n    @Input(\"Order\")\r\n    public order: Order;\r\n\r\nconstructor(private http: HttpClient) {\r\n    \r\n}\r\n\r\n    public async save() : Promise<void>\r\n    {\r\n        let savedOrder : Order;\r\n        if(this.order.id){\r\n            savedOrder = await this.http.post<Order>('api/Demo',this.order).toPromise();\r\n        } else {\r\n            savedOrder = await this.http.put<Order>('api/Demo',this.order).toPromise();\r\n        }\r\n\r\n        this.order.id = savedOrder.id;\r\n        this.order.orderDate = savedOrder.orderDate;\r\n        this.order.orderDescription = savedOrder.orderDescription;\r\n        this.order.orderNumber = savedOrder.orderNumber;\r\n    }\r\n}","<form>\r\n    <div class=\"form-group\">\r\n      <label for=\"orderNumber\">Nr</label>\r\n      <input type=\"text\" class=\"form-control\" id=\"orderNumber\" name=\"orderNumber\" [(ngModel)]=\"order.orderNumber\">\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"orderDescription\">Description</label>\r\n      <textarea class=\"form-control\" id=\"orderDescription\"  name=\"orderDescription\"  [(ngModel)]=\"order.orderDescription\" rows=\"3\"></textarea>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"orderDate\">Date</label>\r\n        <input type=\"date\" class=\"form-control\" id=\"orderDate\" name=\"orderDate\" [(ngModel)]=\"order.orderDate\">\r\n      </div>\r\n      <button (click)=\"save()\">save</button>\r\n  </form>","<div class=\"row\">\r\n  <div class=\"col\">\r\n    <table class=\"table\">\r\n      <thead class=\"thead-dark\">\r\n        <tr>\r\n          <th scope=\"col\">#</th>\r\n          <th scope=\"col\">Nr</th>\r\n          <th scope=\"col\">Description</th>\r\n          <th scope=\"col\">Date</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let item of orders\" (click)=\"select(item)\" [class.table-active]=\"item == selectedOrder\">\r\n          <th scope=\"row\">{{item.id}}</th>\r\n          <td>{{item.orderNumber}}</td>\r\n          <td>{{item.orderDescription}}</td>\r\n          <td>{{item.orderDate}}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <button (click)=\"addNew()\">add</button>\r\n    <button (click)=\"delete()\" *ngIf=\"selectedOrder\">delete</button>\r\n  </div>\r\n  <div class=\"col\">\r\n    <order-detail *ngIf=\"selectedOrder\" [Order]=\"selectedOrder\"></order-detail>\r\n  </div>\r\n</div>\r\n\r\n  ","import { Component, OnInit } from \"@angular/core\";\r\nimport { Order } from './order';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n    selector: 'order-list',\r\n    templateUrl: './order-list.component.html'\r\n})\r\nexport class OrderListComponent implements OnInit\r\n{\r\n    public async ngOnInit(): Promise<void>\r\n    {\r\n        var response = await this.http.get<Order[]>(\"/api/Demo\").toPromise();\r\n        this.orders = response;\r\n    }\r\n    \r\n    public orders: Order[] = [];\r\n\r\n    public selectedOrder: Order;\r\n\r\n    constructor(private http: HttpClient) \r\n    {\r\n\r\n    }\r\n\r\n    public async addNew()\r\n    {\r\n        let order: Order = { orderDescription : 'new', orderDate: new Date() };\r\n        this.orders.push(order);\r\n        this.selectedOrder = order;\r\n    }\r\n\r\n    public  select(item: Order)\r\n    {\r\n        this.selectedOrder = item;\r\n    }\r\n\r\n    public async delete(){\r\n        await this.http.delete(\"/api/Demo/\" + this.selectedOrder.id).toPromise();\r\n\r\n        await this.ngOnInit();\r\n    }\r\n}","import { componentFactoryName } from \"@angular/compiler\";\r\nimport { Component } from '@angular/core';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { TenantInfo } from './tenant-info';\r\n\r\n@Component({\r\n    selector: 'tenant-selector',\r\n    templateUrl: './tenant-selector.component.html'\r\n})\r\nexport class TenantSelectorComponent {\r\n    public tenants: TenantInfo[] = [];\r\n    private _selectedTenant: TenantInfo;\r\n\r\n    constructor(private oauthService: OAuthService) {\r\n        if (this.oauthService.hasValidAccessToken()) {\r\n            let claims: any = oauthService.getIdentityClaims();\r\n            for (let tenant in claims.tenant) {\r\n                let tenantInfo: TenantInfo = { key: tenant, name: claims.tenant[tenant] }\r\n\r\n                this.tenants.push(tenantInfo);\r\n\r\n                if (tenant == claims.current_tenant) {\r\n                    this._selectedTenant = tenantInfo;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public set selectedTenant(value: TenantInfo) {\r\n        this._selectedTenant = value;\r\n\r\n        this.oauthService.scope = 'openid profile group_names tenant ' + this._selectedTenant.key;\r\n        this.oauthService.logOut(true);\r\n        this.oauthService.initLoginFlow();\r\n    }\r\n\r\n    public get selectedTenant(): TenantInfo {\r\n        return this._selectedTenant;\r\n    }\r\n}","<select [(ngModel)]=\"selectedTenant\">\r\n    <option *ngFor=\"let item of tenants\" [ngValue]=\"item\">{{item.name}}</option>\r\n  </select>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}